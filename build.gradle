apply plugin: 'java'
apply plugin: 'maven'

group = 'com.turn'
version = '0.1.1'
ext.image = rootProject.name
ext.tag = 'docker-dev.turn.com:5000/turn-tsdb/' + image + ':' + version

description = "This project creates TSDs which will run locally with the HBase region servers."

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version:'18.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.4.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.4.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.4.3'
    compile group: 'io.netty', name: 'netty', version:'3.9.4.Final'
    compile group: 'com.stumbleupon', name: 'async', version:'1.4.0'
    compile(group: 'org.apache.zookeeper', name: 'zookeeper', version:'3.3.6') {
        exclude(module: 'log4j')
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'jline')
        exclude(module: 'junit')
    }
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.7'
    compile group: 'org.hbase', name: 'asynchbase', version:'1.6.0'
    compile group: 'org.apache.commons', name: 'commons-math3', version:'3.4.1'
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version:'1.7.7'
    compile group: 'ch.qos.logback', name: 'logback-core', version:'1.0.13'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.0.13'
    compile group: 'com.google.gwt', name: 'gwt-user', version:'2.6.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version:'1.3'
    testCompile group: 'org.javassist', name: 'javassist', version:'3.18.1-GA'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.9.5'
    testCompile group: 'org.objenesis', name: 'objenesis', version:'1.3'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version:'1.5.4'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version:'1.5.4'
}

task fatJar(type: Jar, dependsOn: build) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task copyJar(type: Copy, dependsOn: fatJar) {
    from('build/libs') {
        include fatJar.archiveName
    }
    into('docker')
} 

task copyConfig(type: Copy) {
    from('src/main/resources') {
        include '*'
    }
    into('docker/resources')
}

task buildDockerImage(type: Exec, dependsOn: ['copyJar', 'copyConfig']) {
    commandLine 'docker', 'build', '-t', image,  './docker'
}

buildDockerImage.doLast {
	commandLine 'echo', 'hello'
}

task tagDockerImage(type: Exec, dependsOn: buildDockerImage) {
    commandLine 'docker', 'tag', image, tag
}
task pushDockerImage(type: Exec, dependsOn: tagDockerImage) {
    commandLine 'docker', 'push', tag
}

clean.doLast {
    def cmd = "rm -f docker/${fatJar.archiveName}"
    println cmd
    cmd.execute()
    cmd = "rm -rf docker/resources" 
    println cmd
    cmd.execute()
}
